<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="https://www.w3.org/2005/Atom">
  <channel>
    <title>Alessandro Lacava</title>
    <link>/</link>
    <description>Recent content on Alessandro Lacava</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 May 2020 11:26:32 +0200</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Blog</title>
      <link>/blog/</link>
      <pubDate>Wed, 11 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/blog/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Articles</title>
      <link>/articles/</link>
      <pubDate>Thu, 26 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>/articles/</guid>
      <description>Introduction to Internal DSLs in Scala
Learn how to design and implement an internal domain-specific language (DSL).
[DevX]
Introduction to Functional Programming in Scala
Learn more about Scala, a programming language that supports both object-oriented and functional paradigms.
[DevX]
Combine JavaScript and a Template Engine for Flexible Web Apps
Combine the power and simplicity of the TrimPath template engine with JavaScript and Ajax to develop next-generation web applications.
[Web Developer]</description>
    </item>
    
    <item>
      <title>Talks</title>
      <link>/talks/</link>
      <pubDate>Wed, 11 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/talks/</guid>
      <description>Internal DSL design in Scala A domain-specific language (DSL) is a language that you design with a specific domain in mind. There are two types of domain-specific languages (DSLs): external and internal. The former implicates — in the simplest case — parsing a string into the programming language syntax. The latter, on the other hand, involves implementing a language within your own programming language. Quoting Martin Fowler, &amp;ldquo;Internal DSLs are particular ways of using a host language to give the host language the feel of a particular language&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Thu, 26 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>My name is Alessandro Lacava (a.k.a. Ale or Sandro).
I&amp;rsquo;ve been programming since 1989&amp;ndash;I wrote my first LOC in Pascal at the age of thirteen. At that time web and mobile applications did not exist yet. By the way &amp;ldquo;applications&amp;rdquo;, then, were still called programs. Since then I&amp;rsquo;ve been using different paradigms and languages.
I have an extensive experience with object-oriented design and programming even if, at the moment, I&amp;rsquo;m mainly interested in deepening my knowledge of functional programming and type systems.</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>/privacy-policy/</link>
      <pubDate>Thu, 04 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>/privacy-policy/</guid>
      <description>Cookies To make this website work properly, small data files called cookies are stored on your device. Most websites do this too.
What are cookies? A cookie is a small text file that a website saves on your computer or mobile device when you visit the site. It enables the website to remember your actions and preferences (such as login, language, font size and other display preferences) over a period of time, so you don’t have to keep re-entering them whenever you come back to the site or browse from one page to another.</description>
    </item>
    
    <item>
      <title>Desugaring for comprehensions (AKA for expressions)</title>
      <link>/blog/desugaring-for-comprehensions-aka-for-expressions/</link>
      <pubDate>Thu, 28 May 2020 11:26:32 +0200</pubDate>
      
      <guid>/blog/desugaring-for-comprehensions-aka-for-expressions/</guid>
      <description>Recently I stumbled upon a piece of Scala code that might leave you puzzled. Before showing you the code I must spend a few words about the compiler options.
Compiler options Getting into the glory details of each and every compiler option is out of the scope of this post (see compiler options). Suffice to say you can use some flags to make the Scala compiler stricter and help you find code deficiencies at compile time.</description>
    </item>
    
    <item>
      <title>Keep your code clean with algebraic data types (ADTs)</title>
      <link>/blog/keep-your-code-clean-with-algebraic-data-types-adts/</link>
      <pubDate>Wed, 14 Sep 2016 14:27:23 +0200</pubDate>
      
      <guid>/blog/keep-your-code-clean-with-algebraic-data-types-adts/</guid>
      <description>Recently, Daniel Westheide wrote an interesting post about the abuse of the Option type in Scala. You can find it here. I couldn&amp;rsquo;t agree more with Daniel.
This short story is another example that demonstrates how using Option is not always the best option (pun intended).
I&amp;rsquo;m developing an advertising service for a customer using Scala. A simplified version of the Ad data structure is the following:
final case class Ad(  headline: String,  description1: String,  description2: String ) At some point they told me we need to support, by adding the headline2 field, two types of ad: standard and expanded.</description>
    </item>
    
    <item>
      <title>Scala: Seq, Map and Set as functions</title>
      <link>/blog/scala-seq-map-and-set-as-functions/</link>
      <pubDate>Fri, 23 Oct 2015 10:24:00 +0200</pubDate>
      
      <guid>/blog/scala-seq-map-and-set-as-functions/</guid>
      <description>Yesterday my mate asked me: &amp;ldquo;I have a List[String] and a Map[String, Int] and I want a List[Int] where its values are those of the Map whose keys match the List[String] elements, maintaining the order. Should I use pattern matching?&amp;rdquo;. I know, the sentence is a bit convoluted but the code will make it clear, hopefully. Anyway, I replied: &amp;ldquo;No, you don&amp;rsquo;t need pattern matching, you just need this&amp;rdquo;:
 scala&amp;gt; val m = Map(&amp;#34;a&amp;#34; -&amp;gt; 1, &amp;#34;b&amp;#34; -&amp;gt; 2, &amp;#34;c&amp;#34; -&amp;gt; 3) m: scala.</description>
    </item>
    
    <item>
      <title>Scala case classes in depth</title>
      <link>/blog/scala-case-classes-in-depth/</link>
      <pubDate>Fri, 22 May 2015 08:12:07 +0200</pubDate>
      
      <guid>/blog/scala-case-classes-in-depth/</guid>
      <description>For this post I&amp;rsquo;ll consider the following simple case class unless otherwise specified: case class Person(lastname: String, firstname: String, birthYear: Int)
In this post:
 Common knowledge about case classes Not so common knowledge about case classes Defining a case class using the curried form Defining a case class with a private constructor For the most curious ones Final Notes  Common knowledge about case classes When you declare a case class the Scala compiler does the following for you:</description>
    </item>
    
    <item>
      <title>Scala self-recursive types</title>
      <link>/blog/scala-self-recursive-types/</link>
      <pubDate>Mon, 30 Mar 2015 14:59:24 +0200</pubDate>
      
      <guid>/blog/scala-self-recursive-types/</guid>
      <description>One of the advantages of using a statically typed language is that you can use the type system to enforce some constraints. Scala provides self-recursive types, aka F-bounded polymorphic types that&amp;ndash;along with self types&amp;ndash;let you put powerful constraint to your type definitions.
Self-recursive type definition Terminology apart, let me show you one of the use cases where this could be useful. Consider the following example which does not use a self-recursive type:</description>
    </item>
    
    <item>
      <title>Scala DSL for currency-related operations</title>
      <link>/blog/scala-dsl-for-currency-related-operations/</link>
      <pubDate>Fri, 20 Feb 2015 15:09:06 +0100</pubDate>
      
      <guid>/blog/scala-dsl-for-currency-related-operations/</guid>
      <description>A simple internal DSL in Scala for money-related operations Source code: Scala DSL for money-related operations
This Domain-Specific Language (DSL) lets you perform operations among different currencies, by transparently doing all internal conversions. The conversion map is injected implicitly by the client code.
Usage Example Here&amp;rsquo;s a simple usage example:
 import com.lambdista.money._ import com.lambdista.money.Currency._  object Main {   def main(args: Array[String]): Unit = {   val conversion: Conversion = Map(  (GBP, EUR) -&amp;gt; 1.</description>
    </item>
    
    <item>
      <title>Try-Success-Failure API for Java 8</title>
      <link>/blog/try-success-failure-api-for-java/</link>
      <pubDate>Fri, 20 Jun 2014 14:03:33 +0000</pubDate>
      
      <guid>/blog/try-success-failure-api-for-java/</guid>
      <description>Try-Success-Failure API: Java implementation of the famous Scala counterpart Source code: Try-Success-Failure API for Java
This API is a Java implementation of Scala Try API, originally implemented by the guys at Twitter and later added to the Scala Standard Library.
The Try type represents a computation that may fail. If the computation is successful returns the value wrapped in a Try.Success otherwise returns the java.lang.Exception wrapped in a Try.Failure.
To use Try you need to call the Try.</description>
    </item>
    
    <item>
      <title>Goodbye Dennis Ritchie (dmr)</title>
      <link>/blog/goodbye-dennis-macalistair-ritchie-dmr/</link>
      <pubDate>Thu, 13 Oct 2011 12:56:36 +0000</pubDate>
      
      <guid>/blog/goodbye-dennis-macalistair-ritchie-dmr/</guid>
      <description>Dennis MacAlistair Ritchie (username: dmr, September 9, 1941 — October 8, 2011) This post is dedicated to a man that gave a lot to the computer science world, Dennis Ritchie (a.k.a. dmr). He is the creator of the C programming language and the key developer of the Unix operating system.
The C programming language is the book he wrote along with Brian Kernighan. In my humble opinion, it is one of the best book ever written about computer programming.</description>
    </item>
    
    <item>
      <title>Undo close tab in Eclipse</title>
      <link>/blog/undo-close-tab-in-eclipse/</link>
      <pubDate>Thu, 26 Mar 2009 09:33:59 +0000</pubDate>
      
      <guid>/blog/undo-close-tab-in-eclipse/</guid>
      <description>I don&amp;rsquo;t know about you, but I love the Firefox&amp;rsquo;s undo-close-tab feature (Ctrl+Shift+T). If you use Eclipse you might be glad to know you can undo the close-tab action in Eclipse as well. You can do that both using your mouse by clicking on the yellow left arrow you can see in the Eclipse toolbar and through the keybord using the Alt+Left Arrow key combination.
I hope this helps.</description>
    </item>
    
    <item>
      <title>Object not found | EasyPHP | MySQL | phpMyAdmin</title>
      <link>/blog/object-not-found-easyphp-mysql-phpmyadmin/</link>
      <pubDate>Fri, 30 Jan 2009 09:46:05 +0000</pubDate>
      
      <guid>/blog/object-not-found-easyphp-mysql-phpmyadmin/</guid>
      <description>After installing EasyPHP, when you try to run phpMyAdmin you might get the following error:
Object not found!
The requested URL was not found on this server. If you entered the URL manually please check your spelling and try again.
This might be due to the fact that it tries the following URL:
http://127.0.0.1/mysql/
Try this one instead:
http://127.0.0.1/home/mysql/
If it works then you can work it out by adding the following line to the httpd.</description>
    </item>
    
    <item>
      <title>Java split() of String | Multiple whitespace characters</title>
      <link>/blog/java-split-of-string-multiple-whitespace-characters/</link>
      <pubDate>Wed, 03 Dec 2008 10:47:02 +0000</pubDate>
      
      <guid>/blog/java-split-of-string-multiple-whitespace-characters/</guid>
      <description>The split method of the String class is very useful when you want to tokenize a string. Its power lies in the fact that it accepts a string, as a parameter, which can be a regular expression. However you must be careful when you want to split a string using the whitespace character as a delimiter. Consider the following snippet of code:
 String str = &amp;#34;Testing split using two whitespace characters&amp;#34;; String[] tokens = str.</description>
    </item>
    
    <item>
      <title>OutOfMemoryError in Eclipse | Java Virtual Machine (JVM)</title>
      <link>/blog/outofmemoryerror-in-eclipse-java-virtual-machine-jvm/</link>
      <pubDate>Tue, 22 Jul 2008 08:53:07 +0000</pubDate>
      
      <guid>/blog/outofmemoryerror-in-eclipse-java-virtual-machine-jvm/</guid>
      <description>OutOfMemoryError in Eclipse | Java Virtual Machine (JVM) It might happen that while running a Java application within the Eclipse environment you get an OutOfMemoryError due to the maximum amount of memory dedicated to the heap. You can fix it by increasing the minimum (-Xms parameter) and maximum (-Xmx parameter) heap size. You can do it in two different ways:
 By editing your eclipse.ini file you find under your Eclipse installation directory.</description>
    </item>
    
    <item>
      <title>Performance differences between IN and EXISTS</title>
      <link>/blog/performance-differences-between-in-and-exists/</link>
      <pubDate>Wed, 04 Jun 2008 13:33:24 +0000</pubDate>
      
      <guid>/blog/performance-differences-between-in-and-exists/</guid>
      <description>Very often I hear people wondering if it&amp;rsquo;s better the EXISTS or the IN operator. Let&amp;rsquo;s start by saying that the two operators behave differently when NULL values are involved (see this post).
If you are sure that the field used to join the tables does not include NULL values then the IN operator &amp;ldquo;generally&amp;rdquo; performs better than EXISTS. I say &amp;ldquo;generally&amp;rdquo; because this is not always the case. For example consider the following query:</description>
    </item>
    
    <item>
      <title>NOT IN vs. NOT EXISTS when NULL values are involved</title>
      <link>/blog/not-in-vs-not-exists-when-null-values-are-involved/</link>
      <pubDate>Wed, 04 Jun 2008 13:24:09 +0000</pubDate>
      
      <guid>/blog/not-in-vs-not-exists-when-null-values-are-involved/</guid>
      <description>NOT IN does not behave as you would expect when NULL values are involved. Suppose you have the following tables:
Now try the following query:
 SELECT * FROM table_a a WHERE a.cd_field NOT IN (SELECT b.cd_field FROM table_b b); Does the previous query return any row? The answer is NO it doesn&amp;rsquo;t, even if there is a value (2) in table_a.cd_field which is not present in table_b.cd_field.
I think this is because NOT IN internally uses the inequality operator.</description>
    </item>
    
    <item>
      <title>Funny long jokes and aphorisms about programming (and programmers of course)</title>
      <link>/blog/funny-long-jokes-and-aphorisms-about-programming-and-programmers-of-course/</link>
      <pubDate>Fri, 09 May 2008 13:49:38 +0000</pubDate>
      
      <guid>/blog/funny-long-jokes-and-aphorisms-about-programming-and-programmers-of-course/</guid>
      <description>Here are some funny jokes and aphorisms about computer programmers and programming in general:  A man is smoking a cigarette and blowing smoke rings into the air. His girlfriend becomes irritated with the smoke and says, &amp;ldquo;Can&amp;rsquo;t you see the warning on the cigarette pack? Smoking is hazardous to your health!&amp;ldquo;To which the man replies, &amp;ldquo;I am a programmer. We don&amp;rsquo;t worry about warnings; we only worry about errors.&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Funny short jokes and aphorisms about programming (and programmers of course)</title>
      <link>/blog/funny-short-jokes-and-aphorisms-about-programming-and-programmers-of-course/</link>
      <pubDate>Fri, 09 May 2008 13:25:27 +0000</pubDate>
      
      <guid>/blog/funny-short-jokes-and-aphorisms-about-programming-and-programmers-of-course/</guid>
      <description>Here are some funny jokes and aphorisms about computer programming and programmers in general:  There are only 10 types of people in the world: Those who understand binary, and those who don&amp;rsquo;t.
 It&amp;rsquo;s always a long day, 86,400 won&amp;rsquo;t fit into a short.
 Why do programmers always mix up Halloween and Christmas? Because Oct 31 equals Dec 25.
 &amp;ldquo;Knock, knock.&amp;rdquo; &amp;ldquo;Who&amp;rsquo;s there?&amp;rdquo; very long pause&amp;hellip; &amp;ldquo;Java.&amp;rdquo;</description>
    </item>
    
    <item>
      <title>How to disable all the elements of a form using JavaScript</title>
      <link>/blog/how-to-disable-all-the-elements-of-a-form-using-javascript/</link>
      <pubDate>Mon, 31 Mar 2008 13:41:13 +0000</pubDate>
      
      <guid>/blog/how-to-disable-all-the-elements-of-a-form-using-javascript/</guid>
      <description>Here&amp;rsquo;s a little JavaScript function that disables all form elements:
 function disableElements(formName) {  var fm = document.forms[formName];  for(var i = 0; i &amp;lt; fm.elements.length; ++i) {  fm.elements[i].disabled = true;  } } As you may have noticed the only parameter you need to pass is the form name.</description>
    </item>
    
    <item>
      <title>How to get the number of columns in a ResultSet in Java</title>
      <link>/blog/how-to-get-the-number-of-columns-in-a-resultset-in-java/</link>
      <pubDate>Wed, 12 Dec 2007 10:32:31 +0000</pubDate>
      
      <guid>/blog/how-to-get-the-number-of-columns-in-a-resultset-in-java/</guid>
      <description>In Java it is possible to retrieve the number of columns of a ResultSet dinamically, thanks to the ResultSetMetaData class. Here&amp;rsquo;s an example:
 // Here you get the conn object. E.g.: // Connection conn = DriverManager.getConnection(...);  Statement st = conn.createStatement(); ResultSet rs = st.executeQuery(&amp;#34;SELECT * FROM your_table&amp;#34;); ResultSetMetaData rsmd = rs.getMetaData(); int numCols = rsmd.getColumnCount(); System.out.println(&amp;#34;Number of columns in your_table: &amp;#34; + numCols); The previous code retrieves and displays the number of columns of your_table.</description>
    </item>
    
    <item>
      <title>Capturing groups using regular expressions (RegEx) in JavaScript</title>
      <link>/blog/capturing-groups-in-regular-expressions-regex-in-javascript/</link>
      <pubDate>Mon, 26 Nov 2007 14:21:20 +0000</pubDate>
      
      <guid>/blog/capturing-groups-in-regular-expressions-regex-in-javascript/</guid>
      <description>There are whole books about regular expressions so this post shouldn&amp;rsquo;t be intended as an exhaustive resource on the subject. It just shows how to extract a substring from a string using regular expressions in JavaScript so it must be considered just a tip not a tutorial on RegExp. Look at the following example:
 var str = &amp;#34;http://www.alessandrolacava.com/?code=ALE69&amp;#34;; var regex = /code=(w+)&amp;amp;?/; var results = regex.exec(str); if(!results){  alert(&amp;#34;no match&amp;#34;); } else{  // first group  alert(results[1]); } The previous code extracts the string that follows the code= part of str.</description>
    </item>
    
    <item>
      <title>How to compute the timestamp in JavaScript</title>
      <link>/blog/how-to-compute-the-timestamp-in-javascript/</link>
      <pubDate>Tue, 09 Oct 2007 11:20:28 +0000</pubDate>
      
      <guid>/blog/how-to-compute-the-timestamp-in-javascript/</guid>
      <description>Many sources use the term timestamp to refer specifically to Unix time, the number of seconds since 00:00:00 UTC on January 1, 1970. In JavaScript you can use the built-in object Date to compute this timestamp. Here follows an example:
 var ts = Date.UTC(&amp;#39;2007&amp;#39;, &amp;#39;09&amp;#39;, &amp;#39;28&amp;#39;) / 1000; alert(ts); The previous code displays an alert with the number of seconds between 00:00:00 UTC on January 1, 1970 and 00:00:00 UTC on October 28, 2007.</description>
    </item>
    
    <item>
      <title>How to compute a timestamp in Oracle (PL SQL)</title>
      <link>/blog/how-to-compute-a-timestamp-in-oracle-pl-sql/</link>
      <pubDate>Tue, 09 Oct 2007 09:41:18 +0000</pubDate>
      
      <guid>/blog/how-to-compute-a-timestamp-in-oracle-pl-sql/</guid>
      <description>Many sources use the term timestamp to refer specifically to Unix time, the number of seconds since 00:00:00 UTC on January 1, 1970. In Oracle you can compute this number very easily. For example, the following query computes the number of seconds between 00:00:00 UTC on January 1, 1970 and October 9, 2007.
 SELECT (to_date(&amp;#39;09-10-2007&amp;#39;, &amp;#39;DD-MM-YYYY&amp;#39;) - to_date(&amp;#39;01-01-1970&amp;#39;, &amp;#39;DD-MM-YYYY&amp;#39;)) * 60 * 60 * 24 FROM dual The result of the preceding query should be 1191888000.</description>
    </item>
    
    <item>
      <title>Very Useful Shortcuts for Eclipse</title>
      <link>/blog/very-useful-shortcuts-for-eclipse/</link>
      <pubDate>Tue, 25 Sep 2007 11:10:01 +0000</pubDate>
      
      <guid>/blog/very-useful-shortcuts-for-eclipse/</guid>
      <description>Who uses eclipse already knows how fantastic this great IDE is. Here I want to provide a table with the shortcuts I use almost ever when I develop in Java.
Action Shortcut</description>
    </item>
    
    <item>
      <title>How to attach source or Javadoc to Java Enterprise Edition API in Eclipse</title>
      <link>/blog/how-to-attach-source-or-javadoc-to-servlets-in-eclipse/</link>
      <pubDate>Fri, 14 Sep 2007 12:50:48 +0000</pubDate>
      
      <guid>/blog/how-to-attach-source-or-javadoc-to-servlets-in-eclipse/</guid>
      <description>Eclipse is a great IDE. When you hover your mouse over a class name or method of the Java SE API you get a contextual help for that class or method. However if you do the same thing over a Java EE class, such as HttpServletRequest you might not get the same effect. This is because there&amp;rsquo;s is no source or Javadoc attached to that class. To attach the documentation to your J2EE class as well you can follow these steps:</description>
    </item>
    
    <item>
      <title>How to create a copy/backup of a table in Oracle</title>
      <link>/blog/how-to-create-a-copybackup-of-a-table-in-oracle/</link>
      <pubDate>Wed, 04 Jul 2007 08:16:50 +0000</pubDate>
      
      <guid>/blog/how-to-create-a-copybackup-of-a-table-in-oracle/</guid>
      <description>You can create a backup of a table (structure and data) in Oracle by using the following syntax:
 CREATE TABLE customers_backup AS (SELECT * FROM customers) The previous example creates the customers_backup table which mirrors the structure and data of the customers table.</description>
    </item>
    
    <item>
      <title>How to exclude subversion hidden directories (.svn) using Ant</title>
      <link>/blog/how-to-exclude-subversion-hidden-directories-svn-using-ant/</link>
      <pubDate>Mon, 04 Jun 2007 10:43:49 +0000</pubDate>
      
      <guid>/blog/how-to-exclude-subversion-hidden-directories-svn-using-ant/</guid>
      <description>Many Java developers already know that Ant is a great build tool. Besides a build tool you also need a good version control system to manage the various versions of your code. For this purpose I often use Subversion. Now, there might be time when you need to exclude the Subversion hidden directories from, for example, a backup Ant target you built. To do that you just need to use the following attribute to your zipfileset or other directory-based task:</description>
    </item>
    
    <item>
      <title>How to commit a single DML statement in Oracle (PL/SQL)</title>
      <link>/blog/how-to-commit-a-single-dml-statement-in-oracle-plsql/</link>
      <pubDate>Thu, 24 May 2007 12:52:20 +0000</pubDate>
      
      <guid>/blog/how-to-commit-a-single-dml-statement-in-oracle-plsql/</guid>
      <description>Sometimes you might need to commit a single INSERT, UPDATE or DELETE statement and not the whole main transaction. In such a case you can use an AUTONOMOUS TRANSACTION which is a feature available since Oracle 8i. The trick is to encapsulate the statement in a procedure and use the pragma AUTONOMOUS_TRANSACTION. Here is an example, suppose you have a table, your_table, which has just one column of type NUMBER and you want to insert the value 1, irrespective of the state of the main transaction:</description>
    </item>
    
    <item>
      <title>How to format a decimal number in JavaScript</title>
      <link>/blog/how-to-format-a-decimal-number-in-javascript/</link>
      <pubDate>Fri, 04 May 2007 11:02:16 +0000</pubDate>
      
      <guid>/blog/how-to-format-a-decimal-number-in-javascript/</guid>
      <description>In JavaScript you can use a built-in method to format a decimal number so that it is displayed using, at most, x decimal places. Here is an example:
 var num = 3.1356; var x = 3; alert(num.toFixed(x)); // displays 3.136  As you may have guessed the method is toFixed. It accepts one parameter which is the number of decimal places to take into account.
Note: The number gets rounded as you can notice by the example above.</description>
    </item>
    
    <item>
      <title>How to put a set of rows into a single row in Oracle</title>
      <link>/blog/how-to-put-a-set-of-rows-into-a-single-row-in-oracle/</link>
      <pubDate>Fri, 27 Apr 2007 14:11:27 +0000</pubDate>
      
      <guid>/blog/how-to-put-a-set-of-rows-into-a-single-row-in-oracle/</guid>
      <description>In Oracle you can execute hierarchical queries using some cool operators&amp;ndash;CONNECT BY PRIOR, START WITH and the pseudocolumn SYS_CONNECT_BY_PATH, namely. However, using your fantasy you can exploit these operators to put in a single row&amp;ndash;with each item separated by the next through a separator, such as a comma&amp;ndash;what you have in multiple rows. For example if you have more than one telephone number in different rows and you want to put them in a single comma-separated row you could use a query similar to the following:</description>
    </item>
    
    <item>
      <title>How to tell Oracle to use more than one byte per character</title>
      <link>/blog/how-to-tell-oracle-to-use-more-than-one-byte-per-character/</link>
      <pubDate>Thu, 26 Apr 2007 14:05:31 +0000</pubDate>
      
      <guid>/blog/how-to-tell-oracle-to-use-more-than-one-byte-per-character/</guid>
      <description>When you create a table, by default, the number of bytes used to represent a character in a VARCHAR2 type is 1, irrespective of the characterset of the DB. This may be fine if the characterset is such that it uses just one byte per character. However, if the characterset of the DB is such that there might take more than one byte to represent a character (for example for characterset = AL32UTF8) you might run into troubles, such as the error: ORA-01401: inserted value too large for column.</description>
    </item>
    
    <item>
      <title>How to exploit UltraEdit-32 to highlight code based on file extensions</title>
      <link>/blog/how-to-exploit-ultraedit-32-to-highlight-based-on-file-extensions/</link>
      <pubDate>Wed, 14 Mar 2007 08:27:14 +0000</pubDate>
      
      <guid>/blog/how-to-exploit-ultraedit-32-to-highlight-based-on-file-extensions/</guid>
      <description>UltraEdit-32 (UE for short from now on) is a wonderful text editor. You can use it as a simple text editor or to write programs using your favorite languages. Besides other features, UE offers syntax highlighting for the most common programming languages out there. UE recognizes the type of file by looking at its extension. However, sometimes, you might want to use one syntax highlighting for an extension that is not mapped in UE.</description>
    </item>
    
    <item>
      <title>How to display an element to the center of the browser</title>
      <link>/blog/how-to-display-an-element-to-the-center-of-the-browser/</link>
      <pubDate>Fri, 16 Feb 2007 10:55:53 +0000</pubDate>
      
      <guid>/blog/how-to-display-an-element-to-the-center-of-the-browser/</guid>
      <description>Sometimes you might need to display an element, for example a div, to the center of the browser. Here is an example of how you can do it using JavaScript and CSS.
 function init() {  // Reference to the element  var loading = document.getElementById(&amp;#34;loading&amp;#34;);  // The div&amp;#39;s width, set within the CSS class  var loadingWidth = loading.offsetWidth;  // The div&amp;#39;s width, set within the CSS class  var loadingHeight = loading.</description>
    </item>
    
    <item>
      <title>How to detect the selected checkboxes using JavaScript</title>
      <link>/blog/how-to-detect-the-selected-checkboxes-using-javascript/</link>
      <pubDate>Tue, 16 Jan 2007 16:31:26 +0000</pubDate>
      
      <guid>/blog/how-to-detect-the-selected-checkboxes-using-javascript/</guid>
      <description>Here is an example of how you can retrieve the selected checkboxes using a JavaScript function:
 &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;script&amp;gt; function getSelectedValues(elem) {  var elemNumber = document.myForm.test.length;   var selectedElems = [];  for(j = 0; j &amp;lt; elemNumber; j++) {  if(elem[j].checked) {  selectedElems.push(elem[j].value);  }  }  return selectedElems; } &amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt;  &amp;lt;body&amp;gt; &amp;lt;form id=&amp;#34;myForm&amp;#34; name=&amp;#34;myForm&amp;#34;&amp;gt; &amp;lt;input type=&amp;#34;checkbox&amp;#34; id=&amp;#34;test&amp;#34; name=&amp;#34;myCheckBox&amp;#34; value=&amp;#34;test1&amp;#34;&amp;gt; Test 1   &amp;lt;input type=&amp;#34;checkbox&amp;#34; id=&amp;#34;test&amp;#34; name=&amp;#34;myCheckBox&amp;#34; value=&amp;#34;test2&amp;#34;&amp;gt; Test 2   &amp;lt;input type=&amp;#34;button&amp;#34; value=&amp;#34;Click Here&amp;#34;  onclick=&amp;#34;alert(getSelectedValues(document.</description>
    </item>
    
    <item>
      <title>How to add scrollbars to a block (e.g. a &lt;div&gt; element)</title>
      <link>/blog/how-to-add-scrollbars-to-a-block-eg-a-element/</link>
      <pubDate>Fri, 24 Nov 2006 09:21:30 +0000</pubDate>
      
      <guid>/blog/how-to-add-scrollbars-to-a-block-eg-a-element/</guid>
      <description>If you need to customize a list box then the &amp;lt;select&amp;gt; HTML element might not be enough. In such a case you&amp;rsquo;d like to have something that simulates the &amp;lt;select&amp;gt; behaviour.
Here is the code to use to obtain a custom list box:
 &amp;lt;html&amp;gt;  &amp;lt;head&amp;gt;  &amp;lt;/head&amp;gt;   &amp;lt;body&amp;gt;  &amp;lt;div style=&amp;#34;width: 200px; height: 200px; overflow: auto;&amp;#34;&amp;gt;  &amp;lt;table width=&amp;#34;100%&amp;#34; height=&amp;#34;100%&amp;#34;&amp;gt;  &amp;lt;script&amp;gt;  for (var i = 0; i &amp;lt; 30; i++) {  if (i % 2 == 0) {  document.</description>
    </item>
    
    <item>
      <title>Sorting an array of objects with the sortBy method of Prototype</title>
      <link>/blog/sorting-an-array-of-objects-with-the-sortby-method/</link>
      <pubDate>Mon, 20 Nov 2006 15:34:48 +0000</pubDate>
      
      <guid>/blog/sorting-an-array-of-objects-with-the-sortby-method/</guid>
      <description>Here is an example of how easy it is to sort an array of objects using the Enumerable.sortBy method of the Prototype framework:
 var obj1 = {  lastName : &amp;#34;Lacava&amp;#34;,  firstName : &amp;#34;Alessandro&amp;#34; };  var obj2 = {  lastName : &amp;#34;Brown&amp;#34;,  firstName : &amp;#34;John&amp;#34; };  var obj3 = {  lastName : &amp;#34;Simpson&amp;#34;,  firstName : &amp;#34;Bart&amp;#34; };  var arr = [obj1, obj2, obj3];  //order by last name var sorted = arr.</description>
    </item>
    
    <item>
      <title>Why you shouldn&#39;t be concerned about optimization</title>
      <link>/blog/why-you-shouldnt-be-concerned-about-optimization/</link>
      <pubDate>Wed, 11 Oct 2006 16:26:34 +0000</pubDate>
      
      <guid>/blog/why-you-shouldnt-be-concerned-about-optimization/</guid>
      <description>When you were at the university or in any programming course, you&amp;ndash;like me&amp;ndash;were probably thought of the importance of optimization. In the real world though, you should strive for writing good code&amp;ndash;possibly using bullet-proof Design Patterns&amp;ndash;and defer optimization until later. Actually, you should optimize your code only if, after testing, you realize that optimization is strongly necessary. There are three aphorisms concerning optimization that you cannot but know:
  More computing sins are committed in the name of efficiency (without necessarily achieving it) than for any other single reason, including blind stupidity.</description>
    </item>
    
    <item>
      <title>How to select any character across multiple lines in Java</title>
      <link>/blog/how-to-select-any-character-across-multiple-lines-in-java/</link>
      <pubDate>Tue, 10 Oct 2006 08:52:06 +0000</pubDate>
      
      <guid>/blog/how-to-select-any-character-across-multiple-lines-in-java/</guid>
      <description>You can do that using the following pattern in the compile static method of the java.util.regex.Pattern class. The pattern is (.|n|r)*? which means: any character (the .) or (the |) n or r. Zero or more times (the *) of the whole stuff.
Example: The following method strips the multiline comments (those between /* and */) from a string passed in and returns the resulting string:
 import java.util.regex;  // .</description>
    </item>
    
    <item>
      <title>How to include a .js file (a JavaScript file) within another .js file</title>
      <link>/blog/how-to-include-a-js-file-a-javascript-file-within-another-js-file/</link>
      <pubDate>Fri, 22 Sep 2006 09:43:45 +0000</pubDate>
      
      <guid>/blog/how-to-include-a-js-file-a-javascript-file-within-another-js-file/</guid>
      <description>Actually, there is no function you can call to include a JavaScript file within another one. This is the bad news. The good news is that you can use a trick to accomplish this task. Suppose you have two JavaScript files, say file1.js and file2.js. You want to include file1.js within file2.js because you want to use file1&amp;rsquo;s functions. Here is the code you can use:
 //this is file2.js document.</description>
    </item>
    
    <item>
      <title>Java passes EVERYTHING by value!</title>
      <link>/blog/java-passes-everything-by-value/</link>
      <pubDate>Wed, 13 Sep 2006 08:51:47 +0000</pubDate>
      
      <guid>/blog/java-passes-everything-by-value/</guid>
      <description>It&amp;rsquo;s a common misconception thinking (or worse teaching!) that, in Java, primitives are passed by value and objects by reference. Actually, everything in Java is passed by value as well as object references.
When a parameter is passed by value, an actual copy of it is really passed so that any change made will have only a local effect. For example:
 public static void main(String[] args) {  int a = 0;  increment(a);  System.</description>
    </item>
    
    <item>
      <title>What happens if you write something like a = a&#43;&#43; in Java?</title>
      <link>/blog/what-happens-if-you-write-something-like-a-a-in-java/</link>
      <pubDate>Wed, 13 Sep 2006 07:58:27 +0000</pubDate>
      
      <guid>/blog/what-happens-if-you-write-something-like-a-a-in-java/</guid>
      <description>I often happened to see discussions about this topic. Basically, here is the question. If you have such a code:
 int a = 0; a = a++; System.out.println(a); What does it print?
More than 50% of the programmers will answer 1, some of the remaining will say &amp;ldquo;I don&amp;rsquo;t know&amp;rdquo; and the others will say 0. Well &amp;ldquo;the others&amp;rdquo; are right!
Provided that such a code MUST NEVER BE WRITTEN, let&amp;rsquo;s try to understand, for academic purposes, why it prints 0.</description>
    </item>
    
    <item>
      <title>Using dynamic SQL statements from PL/SQL</title>
      <link>/blog/using-dynamic-sql-statements-from-plsql/</link>
      <pubDate>Wed, 06 Sep 2006 10:24:18 +0000</pubDate>
      
      <guid>/blog/using-dynamic-sql-statements-from-plsql/</guid>
      <description>Sometimes you need to execute dynamic SQL statements. Starting from Oracle8i you can accomplish this task using the EXECUTE IMMEDIATE statement. Here are three examples of how you can take advantage of this great statement.
 sql_select := &amp;#39;SELECT * FROM your_table WHERE field1 = :1&amp;#39;; EXECUTE IMMEDIATE sql_select INTO your_cursor USING your_parameter_for_field1; In this first example I showed how you can use EXECUTE IMMEDIATE to execute the query and put the result into a cursor.</description>
    </item>
    
    <item>
      <title>How to hide/show an HTML form element depending on a combo box choice</title>
      <link>/blog/how-to-hideshow-an-html-form-element-depending-on-a-combo-box-choice/</link>
      <pubDate>Fri, 01 Sep 2006 13:04:03 +0000</pubDate>
      
      <guid>/blog/how-to-hideshow-an-html-form-element-depending-on-a-combo-box-choice/</guid>
      <description>This is an example of how you can show/hide an HTML form element depending on a combo box choice.
Put the following JavaScript code between your &amp;lt;head&amp;gt;&amp;lt;/head&amp;gt; section (or within a .js file if you prefer).
 &amp;lt;script language=&amp;#34;javascript&amp;#34; type=&amp;#34;text/javascript&amp;#34;&amp;gt;  function hide() {  var text = document.formName.textBox;  if(document.formName.combo.value == &amp;#34;hide&amp;#34;) {  text.style.visibility = &amp;#34;hidden&amp;#34;;  }  else {  text.style.visibility = &amp;#34;visible&amp;#34;;  }  } &amp;lt;/script&amp;gt; The following snippet of code instead is the HTML code to use to call the hide function.</description>
    </item>
    
    <item>
      <title>POJO (Plain Old Java Object): The simpler...the better.</title>
      <link>/blog/pojo-plain-old-java-object-the-simplerthe-better/</link>
      <pubDate>Mon, 21 Aug 2006 15:31:02 +0000</pubDate>
      
      <guid>/blog/pojo-plain-old-java-object-the-simplerthe-better/</guid>
      <description>A POJO is simply an object built using a Java class that does not implement any special interfaces such as those defined by the EJB 2 framework. An example of a POJO is a class composed by only:
 Properties, representing the object&amp;rsquo;s state. Getter and setter methods for the properties. Business methods, representing behaviour.  Some properties can represent associations with other POJOs. Here is an example of implementation of the Person entity using a POJO:</description>
    </item>
    
    <item>
      <title>Calling a function of the opener window</title>
      <link>/blog/calling-a-function-of-the-opener-window/</link>
      <pubDate>Thu, 27 Jul 2006 15:16:22 +0000</pubDate>
      
      <guid>/blog/calling-a-function-of-the-opener-window/</guid>
      <description>It is possible, using JavaScript, to call a function pertaining to the opener window, that is the window that, calling window.open, opened the current window. The code to use is the following:
 if (window.opener) {  window.close();  window.opener.foo(&amp;#34;bar&amp;#34;); } First it checks if the opener window is still open. In this case, it closes the current window and call the foo function on the opener window.</description>
    </item>
    
    <item>
      <title>Creating a Class definition in JavaScript</title>
      <link>/blog/creating-class-definition-in-javascript/</link>
      <pubDate>Mon, 24 Jul 2006 16:28:27 +0000</pubDate>
      
      <guid>/blog/creating-class-definition-in-javascript/</guid>
      <description>There are different ways to define classes in JavaScript. However, this is the most widely used and accepted at the moment:
 //class function Person(sLastName, sFirstName, iAge) {  this.lastName = sLastName;  this.firstName = sFirstName;  this.age = iAge;  this.phoneNumbers = new Array(); }  //method Person.prototype.showFullName = function() {  alert(this.lastName + &amp;#34; &amp;#34; + this.firstName); };  //instances var oPerson1 = new Person(&amp;#34;Lacava&amp;#34;, &amp;#34;Alessandro&amp;#34;, 30); var oPerson2 = new Person(&amp;#34;Brown&amp;#34;, &amp;#34;John&amp;#34;, 50); oPerson1.</description>
    </item>
    
    <item>
      <title>How to force one or more metacharacters to be treated as ordinary characters in a Java Regular Expression (RegEx)</title>
      <link>/blog/how-to-force-a-metacharacter-to-be-treated-as-an-ordinary-character-in-a-java-regular-expression-regex/</link>
      <pubDate>Wed, 12 Jul 2006 13:24:03 +0000</pubDate>
      
      <guid>/blog/how-to-force-a-metacharacter-to-be-treated-as-an-ordinary-character-in-a-java-regular-expression-regex/</guid>
      <description>When using RegEx in Java you might face the need of treating one or more metacharacters as ordinary characters. As a reminder the metacharacters in a Java RegEx are:
([{^$|)?*+.
If you want to treat them as ordinary characters you have two options:
 Escape the metacharacter with a backslash, Enclose the whole string that contains metacharacters within Q and E  Q means: &amp;ldquo;quotes all characters until E&amp;rdquo;, while E ends the quotes.</description>
    </item>
    
    <item>
      <title>Creating an instance of the object used to make AJAX calls</title>
      <link>/blog/creating-an-instance-of-the-object-used-to-make-ajax-calls/</link>
      <pubDate>Tue, 11 Jul 2006 15:54:40 +0000</pubDate>
      
      <guid>/blog/creating-an-instance-of-the-object-used-to-make-ajax-calls/</guid>
      <description>Nowadays, AJAX is a ubiquitous technology in the IT world. When you need to create the object used to send asynchronous requests to a server, you might face the browser-difference problem. Here is a JavaScript function you could use to overcome this problem:
 // The following function creates an XMLHttpRequest object function createHttpRequest() {  if (typeof XMLHttpRequest != &amp;#34;undefined&amp;#34;) //NOT IE {  return new XMLHttpRequest();  }  else if (window.</description>
    </item>
    
    <item>
      <title>Using proguard obfuscator through the Wireless Toolkit</title>
      <link>/blog/using-proguard-obfuscator-through-the-wireless-toolkit/</link>
      <pubDate>Tue, 20 Jun 2006 20:53:38 +0000</pubDate>
      
      <guid>/blog/using-proguard-obfuscator-through-the-wireless-toolkit/</guid>
      <description>When you develop an application you might want to protect your code. A good way to accomplish this is using obfuscation. Proguard is a good open-source tool you can use for this purpose. To use it through the Wireless Toolkit (WTK), after downloading Proguard, you need to tell the WTK where it can find the obfuscator. You can do that by editing the file ktools.properties that you can find under %WTK%wtklibWindows, where %WTK% is the root directory of the Wireless Toolkit.</description>
    </item>
    
    <item>
      <title>The Function class in JavaScript</title>
      <link>/blog/the-function-class-in-javascript/</link>
      <pubDate>Wed, 14 Jun 2006 21:38:22 +0000</pubDate>
      
      <guid>/blog/the-function-class-in-javascript/</guid>
      <description>Most programmers know how to define and use a function in JavaScript. For example the following function displays an alert containing the string passed in as a parameter:
 function displayAlert(sText) {  alert(sText); } // Then you call it this way displayAlert(&amp;#34;Hello World!&amp;#34;); How many developers, however, know that JavaScript functions are actually objects? Indeed, you can define the previous function using the Function class:
 var displayAlert = new Function(&amp;#34;sText&amp;#34;, &amp;#34;alert(sText);&amp;#34;); //.</description>
    </item>
    
    <item>
      <title>How to store and extract XML data in and from an Oracle DataBase (DB)</title>
      <link>/blog/how-to-store-and-extract-xml-data-in-and-from-an-oracle-database-db/</link>
      <pubDate>Thu, 08 Jun 2006 15:05:27 +0000</pubDate>
      
      <guid>/blog/how-to-store-and-extract-xml-data-in-and-from-an-oracle-database-db/</guid>
      <description>Here are some snippets of code showing how to accomplish this:
 CREATE TABLE SampleTable (id number primary key, person XMLType) This first example creates a table with only two columns: id and person. The first is the PK of the table and the second is of XMLType type. The latter is going to contain our XML data.
Now let&amp;rsquo;s insert one row in the table.
 INSERT INTO SampleTable VALUES (1, XMLType(&amp;#39;XMLString&amp;#39;)) Where you must replace XMLString with any string representing XML.</description>
    </item>
    
    <item>
      <title>Using Javascript to detect the key pressed</title>
      <link>/blog/using-javascript-to-detect-the-key-pressed/</link>
      <pubDate>Fri, 12 May 2006 12:23:55 +0000</pubDate>
      
      <guid>/blog/using-javascript-to-detect-the-key-pressed/</guid>
      <description>Often it is useful to intercept the key pressed within an element of an HTML form, like a textbox and so on. For this purpose you can use Javascript to extract the code of the key that was pressed. Here is a snippet of code you can use&amp;ndash;of course adapting it to your needs.
 function keyPressed(e){  var code;  if(window.event){ //IE  code = e.keyCode;  }  else{ //other browsers  code = e.</description>
    </item>
    
    <item>
      <title>The name-separator character in Java</title>
      <link>/blog/the-name-separator-character-in-java/</link>
      <pubDate>Tue, 02 May 2006 13:54:38 +0000</pubDate>
      
      <guid>/blog/the-name-separator-character-in-java/</guid>
      <description>Java was born as a platform-independent programming language. Some features that grant the platform independence are achieved using the APIs of the language itself. For example, to construct a filename path, you can use the public static field separator of the java.io.File class.
Example:
String path = java.io.File.separator + &amp;#34;foldername&amp;#34; + java.io.File.separator + &amp;#34;filename&amp;#34;; This produces the string /foldername/filename under Unix-like systems and \foldername\filename under Windows systems.</description>
    </item>
    
    <item>
      <title>Hello world!</title>
      <link>/blog/hello-world/</link>
      <pubDate>Thu, 13 Apr 2006 22:32:24 +0000</pubDate>
      
      <guid>/blog/hello-world/</guid>
      <description>Welcome to my blog. This is my first post. About myself: My name is Alessandro Lacava and I am a software engineer. I love designing and developing software. So, as you may have guessed, my blog is going to mainly contain articles, techniques, tips &amp;amp; tricks and much more about computer programming. Stay tuned.</description>
    </item>
    
  </channel>
</rss>
