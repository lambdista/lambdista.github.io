<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Optimization on Alessandro Lacava</title>
    <link>/tags/optimization/</link>
    <description>Recent content in Optimization on Alessandro Lacava</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Jun 2008 13:33:24 +0000</lastBuildDate><atom:link href="/tags/optimization/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Performance differences between IN and EXISTS</title>
      <link>/blog/performance-differences-between-in-and-exists/</link>
      <pubDate>Wed, 04 Jun 2008 13:33:24 +0000</pubDate>
      
      <guid>/blog/performance-differences-between-in-and-exists/</guid>
      <description>Very often I hear people wondering if it&amp;rsquo;s better the EXISTS or the IN operator. Let&amp;rsquo;s start by saying that the two operators behave differently when NULL values are involved (see this post).
If you are sure that the field used to join the tables does not include NULL values then the IN operator &amp;ldquo;generally&amp;rdquo; performs better than EXISTS. I say &amp;ldquo;generally&amp;rdquo; because this is not always the case. For example consider the following query:</description>
    </item>
    
    <item>
      <title>Why you shouldn&#39;t be concerned about optimization</title>
      <link>/blog/why-you-shouldnt-be-concerned-about-optimization/</link>
      <pubDate>Wed, 11 Oct 2006 16:26:34 +0000</pubDate>
      
      <guid>/blog/why-you-shouldnt-be-concerned-about-optimization/</guid>
      <description>When you were at the university or in any programming course, you&amp;ndash;like me&amp;ndash;were probably thought of the importance of optimization. In the real world though, you should strive for writing good code&amp;ndash;possibly using bullet-proof Design Patterns&amp;ndash;and defer optimization until later. Actually, you should optimize your code only if, after testing, you realize that optimization is strongly necessary. There are three aphorisms concerning optimization that you cannot but know:
More computing sins are committed in the name of efficiency (without necessarily achieving it) than for any other single reason, including blind stupidity.</description>
    </item>
    
  </channel>
</rss>
