<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Implicit on Alessandro Lacava</title>
    <link>http://www.alessandrolacava.com/tags/implicit/</link>
    <description>Recent content in Implicit on Alessandro Lacava</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Feb 2015 15:09:06 +0100</lastBuildDate>
    
	<atom:link href="http://www.alessandrolacava.com/tags/implicit/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Scala DSL for currency-related operations</title>
      <link>http://www.alessandrolacava.com/blog/scala-dsl-for-currency-related-operations/</link>
      <pubDate>Fri, 20 Feb 2015 15:09:06 +0100</pubDate>
      
      <guid>http://www.alessandrolacava.com/blog/scala-dsl-for-currency-related-operations/</guid>
      <description>A simple internal DSL in Scala for money-related operations Source code: Scala DSL for money-related operations
This Domain-Specific Language (DSL) lets you perform operations among different currencies, by transparently doing all internal conversions. The conversion map is injected implicitly by the client code.
Usage Example Here&amp;rsquo;s a simple usage example:
import com.lambdista.money._ import com.lambdista.money.Currency._ object Main { def main(args: Array[String]): Unit = { val conversion: Conversion = Map( (GBP, EUR) -&amp;gt; 1.</description>
    </item>
    
  </channel>
</rss>