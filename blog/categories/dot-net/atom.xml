<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: .net | Alessandro Lacava]]></title>
  <link href="http://www.alessandrolacava.com/blog/categories/dot-net/atom.xml" rel="self"/>
  <link href="http://www.alessandrolacava.com/"/>
  <updated>2017-10-02T15:08:51+02:00</updated>
  <id>http://www.alessandrolacava.com/</id>
  <author>
    <name><![CDATA[Alessandro Lacava]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Producing Professional MSDN-style Documentation With .NET and NDoc]]></title>
    <link href="http://www.alessandrolacava.com/blog/producing-professional-msdn-style-documentation-with-net-and-ndoc/"/>
    <updated>2011-10-26T16:52:33+02:00</updated>
    <id>http://www.alessandrolacava.com/blog/producing-professional-msdn-style-documentation-with-net-and-ndoc</id>
    <content type="html"><![CDATA[<h3>Tired of trying to keep your documentation synchronized with the source? You can help alleviate the problem by creating professional documentation directly from the built-in XML documentation features of the C# language using the brilliant NDoc open-source application.</h3>

<p>The .NET framework provides a nice way to insert XML documentation tags inside C# source code. These tags can then be extracted to an XML file, and using NDoc, transformed into fully-functional MSDN-style documentation.</p>

<p>Go to <a href="http://www.devx.com/dotnet/Article/29646">DevX</a> to read the rest of the article: <strong>Producing Professional MSDN-style Documentation with .NET and NDoc</strong>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Keeping Secrets Secret: Steganography With .NET]]></title>
    <link href="http://www.alessandrolacava.com/blog/keeping-secrets-secret-steganography-with-net/"/>
    <updated>2011-10-26T16:47:19+02:00</updated>
    <id>http://www.alessandrolacava.com/blog/keeping-secrets-secret-steganography-with-net</id>
    <content type="html"><![CDATA[<h3>Steganography is a way to protect information by hiding it &ldquo;in plain sight&rdquo; within other types of digital content. Steganography complements rather than replaces encryption by adding another layer of securityâ€”it&rsquo;s much more difficult to decrypt a message if you don&rsquo;t know that there is a message. See how to leverage .NET to create steganographic techniques that hide encrypted information inside common digital data files.</h3>

<p>Steganography, literally &ldquo;hidden writing,&rdquo; is nowadays most often associated with embedding data in some form of electronic media. Data is hidden by adding or altering insignificant bits of information of a file. For example, an algorithm designed to embed a text message might slightly alter information describing the RGB composition of a pixel for an image file.</p>

<p>Go to <a href="http://www.devx.com/dotnet/Article/22667">DevX</a> to read the rest of the article: <strong>Keeping Secrets Secret: Steganography with .NET</strong>.</p>
]]></content>
  </entry>
  
</feed>
